DATA SEGMENT
INPUTSTR DB 'Please enter two nums to do four operations: ', 0DH, 0AH, '$'
ADDSTR DB 'Addition result: ', 0DH, 0AH, '$'
SUBSTR DB 'Substraction result: ', 0DH, 0AH, '$'
MULSTR DB 'Multiplication result: ', 0DH, 0AH, '$'
DIVSTR DB 'Division result: ', 0DH, 0AH, '$'
BINSTR DB 'Binary: ', '$'
DECSTR DB 'Decimal: ', '$'
HEXSTR DB 'Hexadecimal: ', '$'
RESULT DW ?
TEN DW 10
DATA ENDS
CODE SEGMENT
	ASSUME CS:CODE, DS:DATA
BEGIN:
MAIN PROC FAR
	MOV AX, DATA
	MOV DS, AX
	LEA DX, INPUTSTR
	MOV AH, 09H
	INT 21H
	;输入第一个数num1
	CALL INPUT_NUM
	PUSH BX
	MOV DL, 0AH
	MOV AH, 02H
	INT 21H
	;输入第二个数num2
	CALL INPUT_NUM
	PUSH BX
	MOV DL, 0AH
	MOV AH, 02H
	INT 21H

	LEA DX, ADDSTR
	MOV AH, 09H
	INT 21H
	CALL ADDITION
	MOV AX, RESULT ;十进制计算结果放回AX中
	CALL OUTPUT

	LEA DX, SUBSTR
	MOV AH, 09H
	INT 21H
	CALL SUBSTRACTION
	MOV AX, RESULT ;十进制计算结果放回AX中
	CALL OUTPUT

	LEA DX, MULSTR
	MOV AH, 09H
	INT 21H
	CALL MULTIPLICATION
	MOV AX, RESULT ;十进制计算结果放回AX中
	CALL OUTPUT

	LEA DX, DIVSTR
	MOV AH, 09H
	INT 21H
	CALL DIVISION
	MOV AX, RESULT ;十进制计算结果放回AX中
	CALL OUTPUT

	MOV AH, 4CH
	INT 21H

MAIN ENDP ;结束主程序main，下面是子程序的定义

INPUT_NUM PROC NEAR ;输入数字的子程序
	MOV AH, 0AH
	INT 21H
	MOV AL, 0
	ADD DX, 1 ;输入的字符串实际长度存储在DS:DX+1中
	MOV SI, DX
	MOV CH, 0
	MOV CL, [SI]
	MOV AX, 0
	MOV BX, 0
TRANSFER:
	MOV AX, BX
	MUL TEN    ;拿到前几位的运算结果，并乘以10
	MOV BX, AX
	INC SI
	MOV AL, [SI]
	MOV AH, 0
	SUB AL, 30H
	ADD BX, AX ;加上减去30H后的十进制数
	LOOP TRANSFER
	RET
INPUT_NUM ENDP

ADDITION PROC NEAR ;执行加法的子程序
	PUSH SI
	MOV SI, SP
	PUSH BP
	PUSH DI
	MOV BP, [SI+6] ;NUM1
	MOV DI, [SI+4] ;NUM2
	ADD BP, DI
	MOV RESULT, BP
	POP DI
	POP BP
	POP SI
	RET
ADDITION ENDP

SUBSTRACTION PROC NEAR ;执行减法的子程序
	PUSH SI
	MOV SI, SP
	PUSH BP
	PUSH DI
	MOV BP, [SI+6] ;NUM1
	MOV DI, [SI+4] ;NUM2
	SUB BP, DI
	MOV RESULT, BP
	POP DI
	POP BP
	POP SI
	RET
SUBSTRACTION ENDP

MULTIPLICATION PROC NEAR ;执行乘法的子程序
	PUSH SI
	MOV SI, SP
	MOV BX, [SI+6] ;NUM1
	MOV AX, [SI+4] ;NUM2
	MUL BX
	MOV RESULT, AX
	POP SI
	RET
MULTIPLICATION ENDP

DIVISION PROC NEAR ;执行除法的子程序
	PUSH SI
	MOV SI, SP
	MOV DX, 0
	MOV BX, [SI+4] ;NUM2
	MOV AX, [SI+6] ;NUM1
	DIV BX
	MOV RESULT, AX
	POP SI
	RET
DIVISION ENDP

OUTPUT PROC NEAR ;输出结果二进制，十进制，十六进制的子程序
	MOV DX, 0
	MOV CX, 0
LOOP_STORE1:
	DIV WORD PTR TEN
	PUSH DX ;结果的余数放在DX中
	MOV DX, 0
	INC CX
	CMP AX, 0
	JZ PRINT1
	JMP LOOP_STORE1
PRINT1:
	LEA DX, DECSTR
	MOV AH, 09H
	INT 21H
LOOP_PRINT1:
	POP DX
	ADD DX, 30H
	MOV AH, 02H
	INT 21H
	LOOP LOOP_PRINT1
	MOV DL, 0AH
	MOV AH, 02H
	INT 21H
	MOV DX, 0
	CALL BINARY
	MOV DX, 0
	CALL HEXA
	RET
OUTPUT ENDP


BINARY PROC NEAR ;十进制转二进制结果输出
	MOV AX, RESULT
	PUSH DX
	PUSH BP
	MOV BP, DX
	MOV CX, 0
	MOV BX, 0002H
LOOP_STORE2:
	DIV BX
	PUSH DX
	MOV DX, 0
	INC CX
	CMP AX, 0
	JZ PRINT2
	JMP LOOP_STORE2
PRINT2:
	MOV AX,BP
	MOV BP, 0
	CMP AX, 0
	JNZ LOOP_STORE2
	LEA DX, BINSTR
	MOV AH, 09H
	INT 21H
LOOP_PRINT2:
	POP DX
	ADD DX, 30H
	MOV AH, 02H
	INT 21H
	LOOP LOOP_PRINT2
	MOV DL, 0AH
	MOV AH, 02H
	INT 21H
	POP BP
	POP DX
	RET
BINARY ENDP

HEXA PROC NEAR ;十进制转十六进制结果输出
	MOV AX, RESULT
	MOV SI, DX
	MOV CX, 0
	MOV BX, 0010H
LOOP_STORE3:
	DIV BX
	PUSH DX
	MOV DX, 0
	INC CX
	CMP AX, 0
	JZ PRINT3
	JMP LOOP_STORE3
PRINT3:
	MOV AX, SI
	MOV SI, 0
	CMP AX, 0
	JNZ LOOP_STORE3
	LEA DX, HEXSTR
	MOV AH, 09H
	INT 21H
LOOP_PRINT3:
	POP DX
	CMP DX, 10
	JNB LETTER
	ADD DX, 30H
	JMP OUT
LETTER:
	ADD DX, 37H
OUT:
	MOV AH, 02H
	INT 21H
	LOOP LOOP_PRINT3
	MOV DL, 0AH
	MOV AH, 02H
	INT 21H
	RET
HEXA ENDP

CODE ENDS
	END BEGIN